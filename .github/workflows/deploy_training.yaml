name: Deploy Training Job
on: 
  workflow_dispatch:
    inputs:
      tasklist:
        type: string
        required: true
      vars-file:
        type: string
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/${{ secrets.DEV_GKE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
          service_account: '${{ secrets.DEV_GKE_SA }}'
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: '${{ steps.auth.outputs.access_token }}'
      - name: Get SHA
        id: get-sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
      - name: Generate image metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            gcr.io/${{ secrets.DEV_GKE_PROJECT }}/ml-training
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,enable=true,priority=100,prefix=sha-,suffix=-${{ steps.date.outputs.date }},format=short
            type=sha
          flavor: |
            latest=true
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ./build/training/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - id: 'get-credentials'
        name: Get cluster credentials
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          project_id: ${{ secrets.DEV_GKE_PROJECT_ID }}
          cluster_name: 'cluster-1'
          location: 'us-east1-b'
      - name: Deploy Job
        run: helm upgrade -i --set image.registry=$REGISTRY --set image.version=$GIT_COMMIT --set tasklist=${{ inputs.tasklist }} --set varsfile=${{ inputs.vars-file }} ml-training-job helm-chart/ml-training 
        env:
          GIT_COMMIT: "${{ steps.get-sha.outputs.sha_short }}"
          REGISTRY: "gcr.io/${{ secrets.DEV_GKE_PROJECT }}"

