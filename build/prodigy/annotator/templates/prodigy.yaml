---
# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: annotator-{{ .Values.deployEnv }}
spec:
  persistentVolumeReclaimPolicy: ""
  accessModes:
    - ReadWriteOnce
  capacity: 
    storage: 500Gi
  claimRef:
    namespace: default
    name: annotator-{{ .Values.deployEnv }}
  gcePersistentDisk:
    pdName: annotator-{{ .Values.deployEnv }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: annotator-{{ .Values.deployEnv }}
spec:
  selector: 
    matchLabels: 
      app: annotator-{{ .Values.deployEnv }}
      stackRole: annotator
  serviceName: annotator-{{ .Values.deployEnv }}
  replicas: 1
  template:
    metadata:
      labels:
        app: annotator-{{ .Values.deployEnv }}
        stackRole: annotator
    spec:
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: preemptible
                    operator: In
                    values:
                      - "false"
                      - ""
                  - key: durable
                    operator: In
                    values:
                      - "true"
              weight: 100
            - preference:
                matchExpressions:
                  - key: preemptible
                    operator: NotIn
                    values:
                      - "true"
              weight: 100
      containers:
        - name: prodigy
          image: "{{ .Values.prodigyAnnotator.imageName }}:{{ .Values.prodigyAnnotator.imageTag }}"
          # args: [ "while true; do echo Waiting; sleep 100; done" ]
          # args: ["prodigy ner-recipe ref_tagging input silver_output_full מקור -model-dir /prodigy-disk/model-last --view-id ner_manual -db-host $MONGO_HOST -db-port 27017 -F ./functions.py"]
          # args: ["prodigy ner-recipe jeru_ref_tagging yerushalmi_input yerushalmi_output source -model-dir /prodigy-disk/jeru_ref_tagging --view-id ner_manual -db-host $MONGO_HOST -db-port 27017 -dir ltr -F ./functions.py"]
          # args: [ "prodigy ner-recipe achronim achronim_input achronim_output מקור -model-dir /prodigy-disk/webpages_he --view-id ner_manual -db-host $MONGO_HOST -db-port 27017 -dir rtl -F ./functions.py" ]
          # args: [ "prodigy ner-recipe ner ner_en_input3 ner_en_output3 Person,Citation,Group-of-People,Place,Term,Time,Name-of-God -model-dir /prodigy-disk/ner_en --view-id ner_manual -db-host $MONGO_HOST -db-port 27017 -dir ltr -should-add-predictions 1 -F ./functions.py" ]
          args: [ "prodigy ner-recipe ner test_data_to_refine test_data_output2 בן-אדם,מקור,קבוצת-אנשים,מקום,מונח,זמן,שם-אלקים -model-dir /prodigy-disk/ner_he --view-id ner_manual -db-host $MONGO_HOST -db-port 27017 -dir rtl -should-add-predictions 1 -train-on-input 0 -F ./functions.py" ]
          # args: ["prodigy ner-recipe webpages_sub_citation webpages_sub_citation_input2 webpages_sub_citation_output /prodigy-disk/webpages_subref_he כותרת,דה,מספר,שם,לקמן-להלן,סימן-טווח,שם-עצמי,לא-רציף --view-id ner_manual -db-host $MONGO_HOST -db-port 27017 -train-on-input 0 -dir rtl -F ./functions.py"]
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: {{ .Values.prodigyAnnotator.resources.request.memory }}
              cpu: {{ .Values.prodigyAnnotator.resources.request.cpu }}
            limits:
              memory: {{ .Values.prodigyAnnotator.resources.limit.memory }}
              cpu: {{ .Values.prodigyAnnotator.resources.limit.cpu }}
          readinessProbe:
            tcpSocket:
              port: 8080
            periodSeconds: 10
            timeoutSeconds: 3
          livenessProbe:
            tcpSocket: 
              port: 8080
            periodSeconds: 10
            timeoutSeconds: 3
          env: 
            - name: MONGO_HOST
              value: {{ .Values.prodigyAnnotator.mongoHostname }}
            - name: RANDOM
              value: {{ randAlphaNum 8 }}
            - name: PRODIGY_BASIC_AUTH_USER
              value: {{ .Values.prodigyAnnotator.username }}
            - name: PRODIGY_BASIC_AUTH_PASS
              value: {{ .Values.prodigyAnnotator.password }}
          volumeMounts:
            - mountPath: /prodigy-disk
              name: prodigy-disk
  volumeClaimTemplates:
    - metadata:
        name: prodigy-disk
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 500Gi
---
apiVersion: v1
kind: Service
metadata:
  name: annotator-{{ .Values.deployEnv }}
  labels:
    app: annotator-{{ .Values.deployEnv }}
spec:
  type: LoadBalancer
  loadBalancerIP: {{ .Values.prodigyAnnotator.loadBalancerIP }}
  ports: 
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: annotator-{{ .Values.deployEnv }}
...
